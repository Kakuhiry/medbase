{"ast":null,"code":"Function.prototype.augment = function (body) {\n  var base = this.prototype;\n  var prototype = Object.create(base);\n  body.apply(prototype, Array.from(arguments, 1).concat(base));\n  if (!Object.ownPropertyOf(prototype, \"constructor\")) return prototype;\n  var constructor = prototype.constructor;\n  constructor.prototype = prototype;\n  return constructor;\n};\n\n(function funct() {\n  var bind = funct.bind;\n  var bindable = Function.bindable = bind.bind(bind);\n  var callable = Function.callable = bindable(funct.call);\n  Object.ownPropertyOf = callable(funct.hasOwnProperty);\n  Array.from = callable([].slice);\n})();","map":{"version":3,"sources":["/home/elvis/Documents/GitHub/medbase/mern-auth/node_modules/augment/lib/augment.js"],"names":["Function","prototype","augment","body","base","Object","create","apply","Array","from","arguments","concat","ownPropertyOf","constructor","funct","bind","bindable","callable","call","hasOwnProperty","slice"],"mappings":"AAAAA,QAAQ,CAACC,SAAT,CAAmBC,OAAnB,GAA6B,UAAUC,IAAV,EAAgB;AACzC,MAAIC,IAAI,GAAG,KAAKH,SAAhB;AACA,MAAIA,SAAS,GAAGI,MAAM,CAACC,MAAP,CAAcF,IAAd,CAAhB;AACAD,EAAAA,IAAI,CAACI,KAAL,CAAWN,SAAX,EAAsBO,KAAK,CAACC,IAAN,CAAWC,SAAX,EAAsB,CAAtB,EAAyBC,MAAzB,CAAgCP,IAAhC,CAAtB;AACA,MAAI,CAACC,MAAM,CAACO,aAAP,CAAqBX,SAArB,EAAgC,aAAhC,CAAL,EAAqD,OAAOA,SAAP;AACrD,MAAIY,WAAW,GAAGZ,SAAS,CAACY,WAA5B;AACAA,EAAAA,WAAW,CAACZ,SAAZ,GAAwBA,SAAxB;AACA,SAAOY,WAAP;AACH,CARD;;AAUC,UAASC,KAAT,GAAiB;AACd,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,MAAIC,QAAQ,GAAGhB,QAAQ,CAACgB,QAAT,GAAoBD,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAnC;AACA,MAAIE,QAAQ,GAAGjB,QAAQ,CAACiB,QAAT,GAAoBD,QAAQ,CAACF,KAAK,CAACI,IAAP,CAA3C;AACAb,EAAAA,MAAM,CAACO,aAAP,GAAuBK,QAAQ,CAACH,KAAK,CAACK,cAAP,CAA/B;AACAX,EAAAA,KAAK,CAACC,IAAN,GAAaQ,QAAQ,CAAC,GAAGG,KAAJ,CAArB;AACH,CANA,GAAD","sourcesContent":["Function.prototype.augment = function (body) {\n    var base = this.prototype;\n    var prototype = Object.create(base);\n    body.apply(prototype, Array.from(arguments, 1).concat(base));\n    if (!Object.ownPropertyOf(prototype, \"constructor\")) return prototype;\n    var constructor = prototype.constructor;\n    constructor.prototype = prototype;\n    return constructor;\n};\n\n(function funct() {\n    var bind = funct.bind;\n    var bindable = Function.bindable = bind.bind(bind);\n    var callable = Function.callable = bindable(funct.call);\n    Object.ownPropertyOf = callable(funct.hasOwnProperty);\n    Array.from = callable([].slice);\n}());\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/* parser generated by jison 0.4.11 */\n\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar bnf = function () {\n  var parser = {\n    trace: function trace() {},\n    yy: {},\n    symbols_: {\n      \"error\": 2,\n      \"spec\": 3,\n      \"declaration_list\": 4,\n      \"%%\": 5,\n      \"grammar\": 6,\n      \"optional_end_block\": 7,\n      \"EOF\": 8,\n      \"CODE\": 9,\n      \"declaration\": 10,\n      \"START\": 11,\n      \"id\": 12,\n      \"LEX_BLOCK\": 13,\n      \"operator\": 14,\n      \"ACTION\": 15,\n      \"parse_param\": 16,\n      \"options\": 17,\n      \"OPTIONS\": 18,\n      \"token_list\": 19,\n      \"PARSE_PARAM\": 20,\n      \"associativity\": 21,\n      \"LEFT\": 22,\n      \"RIGHT\": 23,\n      \"NONASSOC\": 24,\n      \"symbol\": 25,\n      \"production_list\": 26,\n      \"production\": 27,\n      \":\": 28,\n      \"handle_list\": 29,\n      \";\": 30,\n      \"|\": 31,\n      \"handle_action\": 32,\n      \"handle\": 33,\n      \"prec\": 34,\n      \"action\": 35,\n      \"expression_suffix\": 36,\n      \"handle_sublist\": 37,\n      \"expression\": 38,\n      \"suffix\": 39,\n      \"ALIAS\": 40,\n      \"ID\": 41,\n      \"STRING\": 42,\n      \"(\": 43,\n      \")\": 44,\n      \"*\": 45,\n      \"?\": 46,\n      \"+\": 47,\n      \"PREC\": 48,\n      \"{\": 49,\n      \"action_body\": 50,\n      \"}\": 51,\n      \"ARROW_ACTION\": 52,\n      \"action_comments_body\": 53,\n      \"ACTION_BODY\": 54,\n      \"$accept\": 0,\n      \"$end\": 1\n    },\n    terminals_: {\n      2: \"error\",\n      5: \"%%\",\n      8: \"EOF\",\n      9: \"CODE\",\n      11: \"START\",\n      13: \"LEX_BLOCK\",\n      15: \"ACTION\",\n      18: \"OPTIONS\",\n      20: \"PARSE_PARAM\",\n      22: \"LEFT\",\n      23: \"RIGHT\",\n      24: \"NONASSOC\",\n      28: \":\",\n      30: \";\",\n      31: \"|\",\n      40: \"ALIAS\",\n      41: \"ID\",\n      42: \"STRING\",\n      43: \"(\",\n      44: \")\",\n      45: \"*\",\n      46: \"?\",\n      47: \"+\",\n      48: \"PREC\",\n      49: \"{\",\n      51: \"}\",\n      52: \"ARROW_ACTION\",\n      54: \"ACTION_BODY\"\n    },\n    productions_: [0, [3, 5], [3, 6], [7, 0], [7, 1], [4, 2], [4, 0], [10, 2], [10, 1], [10, 1], [10, 1], [10, 1], [10, 1], [17, 2], [16, 2], [14, 2], [21, 1], [21, 1], [21, 1], [19, 2], [19, 1], [6, 1], [26, 2], [26, 1], [27, 4], [29, 3], [29, 1], [32, 3], [33, 2], [33, 0], [37, 3], [37, 1], [36, 3], [36, 2], [38, 1], [38, 1], [38, 3], [39, 0], [39, 1], [39, 1], [39, 1], [34, 2], [34, 0], [25, 1], [25, 1], [12, 1], [35, 3], [35, 1], [35, 1], [35, 0], [50, 0], [50, 1], [50, 5], [50, 4], [53, 1], [53, 2]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate\n    /* action[1] */\n    , $$\n    /* vstack */\n    , _$\n    /* lstack */\n    ) {\n      /* this == yyval */\n      var $0 = $$.length - 1;\n\n      switch (yystate) {\n        case 1:\n          this.$ = $$[$0 - 4];\n          return extend(this.$, $$[$0 - 2]);\n          break;\n\n        case 2:\n          this.$ = $$[$0 - 5];\n          yy.addDeclaration(this.$, {\n            include: $$[$0 - 1]\n          });\n          return extend(this.$, $$[$0 - 3]);\n          break;\n\n        case 5:\n          this.$ = $$[$0 - 1];\n          yy.addDeclaration(this.$, $$[$0]);\n          break;\n\n        case 6:\n          this.$ = {};\n          break;\n\n        case 7:\n          this.$ = {\n            start: $$[$0]\n          };\n          break;\n\n        case 8:\n          this.$ = {\n            lex: $$[$0]\n          };\n          break;\n\n        case 9:\n          this.$ = {\n            operator: $$[$0]\n          };\n          break;\n\n        case 10:\n          this.$ = {\n            include: $$[$0]\n          };\n          break;\n\n        case 11:\n          this.$ = {\n            parseParam: $$[$0]\n          };\n          break;\n\n        case 12:\n          this.$ = {\n            options: $$[$0]\n          };\n          break;\n\n        case 13:\n          this.$ = $$[$0];\n          break;\n\n        case 14:\n          this.$ = $$[$0];\n          break;\n\n        case 15:\n          this.$ = [$$[$0 - 1]];\n          this.$.push.apply(this.$, $$[$0]);\n          break;\n\n        case 16:\n          this.$ = 'left';\n          break;\n\n        case 17:\n          this.$ = 'right';\n          break;\n\n        case 18:\n          this.$ = 'nonassoc';\n          break;\n\n        case 19:\n          this.$ = $$[$0 - 1];\n          this.$.push($$[$0]);\n          break;\n\n        case 20:\n          this.$ = [$$[$0]];\n          break;\n\n        case 21:\n          this.$ = $$[$0];\n          break;\n\n        case 22:\n          this.$ = $$[$0 - 1];\n          if ($$[$0][0] in this.$) this.$[$$[$0][0]] = this.$[$$[$0][0]].concat($$[$0][1]);else this.$[$$[$0][0]] = $$[$0][1];\n          break;\n\n        case 23:\n          this.$ = {};\n          this.$[$$[$0][0]] = $$[$0][1];\n          break;\n\n        case 24:\n          this.$ = [$$[$0 - 3], $$[$0 - 1]];\n          break;\n\n        case 25:\n          this.$ = $$[$0 - 2];\n          this.$.push($$[$0]);\n          break;\n\n        case 26:\n          this.$ = [$$[$0]];\n          break;\n\n        case 27:\n          this.$ = [$$[$0 - 2].length ? $$[$0 - 2].join(' ') : ''];\n          if ($$[$0]) this.$.push($$[$0]);\n          if ($$[$0 - 1]) this.$.push($$[$0 - 1]);\n          if (this.$.length === 1) this.$ = this.$[0];\n          break;\n\n        case 28:\n          this.$ = $$[$0 - 1];\n          this.$.push($$[$0]);\n          break;\n\n        case 29:\n          this.$ = [];\n          break;\n\n        case 30:\n          this.$ = $$[$0 - 2];\n          this.$.push($$[$0].join(' '));\n          break;\n\n        case 31:\n          this.$ = [$$[$0].join(' ')];\n          break;\n\n        case 32:\n          this.$ = $$[$0 - 2] + $$[$0 - 1] + \"[\" + $$[$0] + \"]\";\n          break;\n\n        case 33:\n          this.$ = $$[$0 - 1] + $$[$0];\n          break;\n\n        case 34:\n          this.$ = $$[$0];\n          break;\n\n        case 35:\n          this.$ = ebnf ? \"'\" + $$[$0] + \"'\" : $$[$0];\n          break;\n\n        case 36:\n          this.$ = '(' + $$[$0 - 1].join(' | ') + ')';\n          break;\n\n        case 37:\n          this.$ = '';\n          break;\n\n        case 41:\n          this.$ = {\n            prec: $$[$0]\n          };\n          break;\n\n        case 42:\n          this.$ = null;\n          break;\n\n        case 43:\n          this.$ = $$[$0];\n          break;\n\n        case 44:\n          this.$ = yytext;\n          break;\n\n        case 45:\n          this.$ = yytext;\n          break;\n\n        case 46:\n          this.$ = $$[$0 - 1];\n          break;\n\n        case 47:\n          this.$ = $$[$0];\n          break;\n\n        case 48:\n          this.$ = '$$ =' + $$[$0] + ';';\n          break;\n\n        case 49:\n          this.$ = '';\n          break;\n\n        case 50:\n          this.$ = '';\n          break;\n\n        case 51:\n          this.$ = $$[$0];\n          break;\n\n        case 52:\n          this.$ = $$[$0 - 4] + $$[$0 - 3] + $$[$0 - 2] + $$[$0 - 1] + $$[$0];\n          break;\n\n        case 53:\n          this.$ = $$[$0 - 3] + $$[$0 - 2] + $$[$0 - 1] + $$[$0];\n          break;\n\n        case 54:\n          this.$ = yytext;\n          break;\n\n        case 55:\n          this.$ = $$[$0 - 1] + $$[$0];\n          break;\n      }\n    },\n    table: [{\n      3: 1,\n      4: 2,\n      5: [2, 6],\n      11: [2, 6],\n      13: [2, 6],\n      15: [2, 6],\n      18: [2, 6],\n      20: [2, 6],\n      22: [2, 6],\n      23: [2, 6],\n      24: [2, 6]\n    }, {\n      1: [3]\n    }, {\n      5: [1, 3],\n      10: 4,\n      11: [1, 5],\n      13: [1, 6],\n      14: 7,\n      15: [1, 8],\n      16: 9,\n      17: 10,\n      18: [1, 13],\n      20: [1, 12],\n      21: 11,\n      22: [1, 14],\n      23: [1, 15],\n      24: [1, 16]\n    }, {\n      6: 17,\n      12: 20,\n      26: 18,\n      27: 19,\n      41: [1, 21]\n    }, {\n      5: [2, 5],\n      11: [2, 5],\n      13: [2, 5],\n      15: [2, 5],\n      18: [2, 5],\n      20: [2, 5],\n      22: [2, 5],\n      23: [2, 5],\n      24: [2, 5]\n    }, {\n      12: 22,\n      41: [1, 21]\n    }, {\n      5: [2, 8],\n      11: [2, 8],\n      13: [2, 8],\n      15: [2, 8],\n      18: [2, 8],\n      20: [2, 8],\n      22: [2, 8],\n      23: [2, 8],\n      24: [2, 8]\n    }, {\n      5: [2, 9],\n      11: [2, 9],\n      13: [2, 9],\n      15: [2, 9],\n      18: [2, 9],\n      20: [2, 9],\n      22: [2, 9],\n      23: [2, 9],\n      24: [2, 9]\n    }, {\n      5: [2, 10],\n      11: [2, 10],\n      13: [2, 10],\n      15: [2, 10],\n      18: [2, 10],\n      20: [2, 10],\n      22: [2, 10],\n      23: [2, 10],\n      24: [2, 10]\n    }, {\n      5: [2, 11],\n      11: [2, 11],\n      13: [2, 11],\n      15: [2, 11],\n      18: [2, 11],\n      20: [2, 11],\n      22: [2, 11],\n      23: [2, 11],\n      24: [2, 11]\n    }, {\n      5: [2, 12],\n      11: [2, 12],\n      13: [2, 12],\n      15: [2, 12],\n      18: [2, 12],\n      20: [2, 12],\n      22: [2, 12],\n      23: [2, 12],\n      24: [2, 12]\n    }, {\n      12: 25,\n      19: 23,\n      25: 24,\n      41: [1, 21],\n      42: [1, 26]\n    }, {\n      12: 25,\n      19: 27,\n      25: 24,\n      41: [1, 21],\n      42: [1, 26]\n    }, {\n      12: 25,\n      19: 28,\n      25: 24,\n      41: [1, 21],\n      42: [1, 26]\n    }, {\n      41: [2, 16],\n      42: [2, 16]\n    }, {\n      41: [2, 17],\n      42: [2, 17]\n    }, {\n      41: [2, 18],\n      42: [2, 18]\n    }, {\n      5: [1, 30],\n      7: 29,\n      8: [2, 3]\n    }, {\n      5: [2, 21],\n      8: [2, 21],\n      12: 20,\n      27: 31,\n      41: [1, 21]\n    }, {\n      5: [2, 23],\n      8: [2, 23],\n      41: [2, 23]\n    }, {\n      28: [1, 32]\n    }, {\n      5: [2, 45],\n      11: [2, 45],\n      13: [2, 45],\n      15: [2, 45],\n      18: [2, 45],\n      20: [2, 45],\n      22: [2, 45],\n      23: [2, 45],\n      24: [2, 45],\n      28: [2, 45],\n      30: [2, 45],\n      31: [2, 45],\n      41: [2, 45],\n      42: [2, 45],\n      49: [2, 45],\n      52: [2, 45]\n    }, {\n      5: [2, 7],\n      11: [2, 7],\n      13: [2, 7],\n      15: [2, 7],\n      18: [2, 7],\n      20: [2, 7],\n      22: [2, 7],\n      23: [2, 7],\n      24: [2, 7]\n    }, {\n      5: [2, 15],\n      11: [2, 15],\n      12: 25,\n      13: [2, 15],\n      15: [2, 15],\n      18: [2, 15],\n      20: [2, 15],\n      22: [2, 15],\n      23: [2, 15],\n      24: [2, 15],\n      25: 33,\n      41: [1, 21],\n      42: [1, 26]\n    }, {\n      5: [2, 20],\n      11: [2, 20],\n      13: [2, 20],\n      15: [2, 20],\n      18: [2, 20],\n      20: [2, 20],\n      22: [2, 20],\n      23: [2, 20],\n      24: [2, 20],\n      41: [2, 20],\n      42: [2, 20]\n    }, {\n      5: [2, 43],\n      11: [2, 43],\n      13: [2, 43],\n      15: [2, 43],\n      18: [2, 43],\n      20: [2, 43],\n      22: [2, 43],\n      23: [2, 43],\n      24: [2, 43],\n      30: [2, 43],\n      31: [2, 43],\n      41: [2, 43],\n      42: [2, 43],\n      49: [2, 43],\n      52: [2, 43]\n    }, {\n      5: [2, 44],\n      11: [2, 44],\n      13: [2, 44],\n      15: [2, 44],\n      18: [2, 44],\n      20: [2, 44],\n      22: [2, 44],\n      23: [2, 44],\n      24: [2, 44],\n      30: [2, 44],\n      31: [2, 44],\n      41: [2, 44],\n      42: [2, 44],\n      49: [2, 44],\n      52: [2, 44]\n    }, {\n      5: [2, 14],\n      11: [2, 14],\n      12: 25,\n      13: [2, 14],\n      15: [2, 14],\n      18: [2, 14],\n      20: [2, 14],\n      22: [2, 14],\n      23: [2, 14],\n      24: [2, 14],\n      25: 33,\n      41: [1, 21],\n      42: [1, 26]\n    }, {\n      5: [2, 13],\n      11: [2, 13],\n      12: 25,\n      13: [2, 13],\n      15: [2, 13],\n      18: [2, 13],\n      20: [2, 13],\n      22: [2, 13],\n      23: [2, 13],\n      24: [2, 13],\n      25: 33,\n      41: [1, 21],\n      42: [1, 26]\n    }, {\n      8: [1, 34]\n    }, {\n      8: [2, 4],\n      9: [1, 35]\n    }, {\n      5: [2, 22],\n      8: [2, 22],\n      41: [2, 22]\n    }, {\n      15: [2, 29],\n      29: 36,\n      30: [2, 29],\n      31: [2, 29],\n      32: 37,\n      33: 38,\n      41: [2, 29],\n      42: [2, 29],\n      43: [2, 29],\n      48: [2, 29],\n      49: [2, 29],\n      52: [2, 29]\n    }, {\n      5: [2, 19],\n      11: [2, 19],\n      13: [2, 19],\n      15: [2, 19],\n      18: [2, 19],\n      20: [2, 19],\n      22: [2, 19],\n      23: [2, 19],\n      24: [2, 19],\n      41: [2, 19],\n      42: [2, 19]\n    }, {\n      1: [2, 1]\n    }, {\n      8: [1, 39]\n    }, {\n      30: [1, 40],\n      31: [1, 41]\n    }, {\n      30: [2, 26],\n      31: [2, 26]\n    }, {\n      15: [2, 42],\n      30: [2, 42],\n      31: [2, 42],\n      34: 42,\n      36: 43,\n      38: 45,\n      41: [1, 46],\n      42: [1, 47],\n      43: [1, 48],\n      48: [1, 44],\n      49: [2, 42],\n      52: [2, 42]\n    }, {\n      1: [2, 2]\n    }, {\n      5: [2, 24],\n      8: [2, 24],\n      41: [2, 24]\n    }, {\n      15: [2, 29],\n      30: [2, 29],\n      31: [2, 29],\n      32: 49,\n      33: 38,\n      41: [2, 29],\n      42: [2, 29],\n      43: [2, 29],\n      48: [2, 29],\n      49: [2, 29],\n      52: [2, 29]\n    }, {\n      15: [1, 52],\n      30: [2, 49],\n      31: [2, 49],\n      35: 50,\n      49: [1, 51],\n      52: [1, 53]\n    }, {\n      15: [2, 28],\n      30: [2, 28],\n      31: [2, 28],\n      41: [2, 28],\n      42: [2, 28],\n      43: [2, 28],\n      44: [2, 28],\n      48: [2, 28],\n      49: [2, 28],\n      52: [2, 28]\n    }, {\n      12: 25,\n      25: 54,\n      41: [1, 21],\n      42: [1, 26]\n    }, {\n      15: [2, 37],\n      30: [2, 37],\n      31: [2, 37],\n      39: 55,\n      40: [2, 37],\n      41: [2, 37],\n      42: [2, 37],\n      43: [2, 37],\n      44: [2, 37],\n      45: [1, 56],\n      46: [1, 57],\n      47: [1, 58],\n      48: [2, 37],\n      49: [2, 37],\n      52: [2, 37]\n    }, {\n      15: [2, 34],\n      30: [2, 34],\n      31: [2, 34],\n      40: [2, 34],\n      41: [2, 34],\n      42: [2, 34],\n      43: [2, 34],\n      44: [2, 34],\n      45: [2, 34],\n      46: [2, 34],\n      47: [2, 34],\n      48: [2, 34],\n      49: [2, 34],\n      52: [2, 34]\n    }, {\n      15: [2, 35],\n      30: [2, 35],\n      31: [2, 35],\n      40: [2, 35],\n      41: [2, 35],\n      42: [2, 35],\n      43: [2, 35],\n      44: [2, 35],\n      45: [2, 35],\n      46: [2, 35],\n      47: [2, 35],\n      48: [2, 35],\n      49: [2, 35],\n      52: [2, 35]\n    }, {\n      31: [2, 29],\n      33: 60,\n      37: 59,\n      41: [2, 29],\n      42: [2, 29],\n      43: [2, 29],\n      44: [2, 29]\n    }, {\n      30: [2, 25],\n      31: [2, 25]\n    }, {\n      30: [2, 27],\n      31: [2, 27]\n    }, {\n      49: [2, 50],\n      50: 61,\n      51: [2, 50],\n      53: 62,\n      54: [1, 63]\n    }, {\n      30: [2, 47],\n      31: [2, 47]\n    }, {\n      30: [2, 48],\n      31: [2, 48]\n    }, {\n      15: [2, 41],\n      30: [2, 41],\n      31: [2, 41],\n      49: [2, 41],\n      52: [2, 41]\n    }, {\n      15: [2, 33],\n      30: [2, 33],\n      31: [2, 33],\n      40: [1, 64],\n      41: [2, 33],\n      42: [2, 33],\n      43: [2, 33],\n      44: [2, 33],\n      48: [2, 33],\n      49: [2, 33],\n      52: [2, 33]\n    }, {\n      15: [2, 38],\n      30: [2, 38],\n      31: [2, 38],\n      40: [2, 38],\n      41: [2, 38],\n      42: [2, 38],\n      43: [2, 38],\n      44: [2, 38],\n      48: [2, 38],\n      49: [2, 38],\n      52: [2, 38]\n    }, {\n      15: [2, 39],\n      30: [2, 39],\n      31: [2, 39],\n      40: [2, 39],\n      41: [2, 39],\n      42: [2, 39],\n      43: [2, 39],\n      44: [2, 39],\n      48: [2, 39],\n      49: [2, 39],\n      52: [2, 39]\n    }, {\n      15: [2, 40],\n      30: [2, 40],\n      31: [2, 40],\n      40: [2, 40],\n      41: [2, 40],\n      42: [2, 40],\n      43: [2, 40],\n      44: [2, 40],\n      48: [2, 40],\n      49: [2, 40],\n      52: [2, 40]\n    }, {\n      31: [1, 66],\n      44: [1, 65]\n    }, {\n      31: [2, 31],\n      36: 43,\n      38: 45,\n      41: [1, 46],\n      42: [1, 47],\n      43: [1, 48],\n      44: [2, 31]\n    }, {\n      49: [1, 68],\n      51: [1, 67]\n    }, {\n      49: [2, 51],\n      51: [2, 51],\n      54: [1, 69]\n    }, {\n      49: [2, 54],\n      51: [2, 54],\n      54: [2, 54]\n    }, {\n      15: [2, 32],\n      30: [2, 32],\n      31: [2, 32],\n      41: [2, 32],\n      42: [2, 32],\n      43: [2, 32],\n      44: [2, 32],\n      48: [2, 32],\n      49: [2, 32],\n      52: [2, 32]\n    }, {\n      15: [2, 36],\n      30: [2, 36],\n      31: [2, 36],\n      40: [2, 36],\n      41: [2, 36],\n      42: [2, 36],\n      43: [2, 36],\n      44: [2, 36],\n      45: [2, 36],\n      46: [2, 36],\n      47: [2, 36],\n      48: [2, 36],\n      49: [2, 36],\n      52: [2, 36]\n    }, {\n      31: [2, 29],\n      33: 70,\n      41: [2, 29],\n      42: [2, 29],\n      43: [2, 29],\n      44: [2, 29]\n    }, {\n      30: [2, 46],\n      31: [2, 46]\n    }, {\n      49: [2, 50],\n      50: 71,\n      51: [2, 50],\n      53: 62,\n      54: [1, 63]\n    }, {\n      49: [2, 55],\n      51: [2, 55],\n      54: [2, 55]\n    }, {\n      31: [2, 30],\n      36: 43,\n      38: 45,\n      41: [1, 46],\n      42: [1, 47],\n      43: [1, 48],\n      44: [2, 30]\n    }, {\n      49: [1, 68],\n      51: [1, 72]\n    }, {\n      49: [2, 53],\n      51: [2, 53],\n      53: 73,\n      54: [1, 63]\n    }, {\n      49: [2, 52],\n      51: [2, 52],\n      54: [1, 69]\n    }],\n    defaultActions: {\n      34: [2, 1],\n      39: [2, 2]\n    },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        throw new Error(str);\n      }\n    },\n    parse: function parse(input) {\n      var self = this,\n          stack = [0],\n          vstack = [null],\n          lstack = [],\n          table = this.table,\n          yytext = '',\n          yylineno = 0,\n          yyleng = 0,\n          recovering = 0,\n          TERROR = 2,\n          EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      this.lexer.setInput(input);\n      this.lexer.yy = this.yy;\n      this.yy.lexer = this.lexer;\n      this.yy.parser = this;\n\n      if (typeof this.lexer.yylloc == 'undefined') {\n        this.lexer.yylloc = {};\n      }\n\n      var yyloc = this.lexer.yylloc;\n      lstack.push(yyloc);\n      var ranges = this.lexer.options && this.lexer.options.ranges;\n\n      if (typeof this.yy.parseError === 'function') {\n        this.parseError = this.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n\n      function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n      }\n\n      function lex() {\n        var token;\n        token = self.lexer.lex() || EOF;\n\n        if (typeof token !== 'number') {\n          token = self.symbols_[token] || token;\n        }\n\n        return token;\n      }\n\n      var symbol,\n          preErrorSymbol,\n          state,\n          action,\n          a,\n          r,\n          yyval = {},\n          p,\n          len,\n          newState,\n          expected;\n\n      while (true) {\n        state = stack[stack.length - 1];\n\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == 'undefined') {\n            symbol = lex();\n          }\n\n          action = table[state] && table[state][symbol];\n        }\n\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n          var errStr = '';\n          expected = [];\n\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push('\\'' + this.terminals_[p] + '\\'');\n            }\n          }\n\n          if (this.lexer.showPosition) {\n            errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + this.lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n          } else {\n            errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n          }\n\n          this.parseError(errStr, {\n            text: this.lexer.match,\n            token: this.terminals_[symbol] || symbol,\n            line: this.lexer.yylineno,\n            loc: yyloc,\n            expected: expected\n          });\n        }\n\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n\n            if (!preErrorSymbol) {\n              yyleng = this.lexer.yyleng;\n              yytext = this.lexer.yytext;\n              yylineno = this.lexer.yylineno;\n              yyloc = this.lexer.yylloc;\n\n              if (recovering > 0) {\n                recovering--;\n              }\n            } else {\n              symbol = preErrorSymbol;\n              preErrorSymbol = null;\n            }\n\n            break;\n\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n\n            if (ranges) {\n              yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n\n            r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack].concat(args));\n\n            if (typeof r !== 'undefined') {\n              return r;\n            }\n\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n\n          case 3:\n            return true;\n        }\n      }\n\n      return true;\n    }\n  };\n\n  var transform = require('./ebnf-transform').transform;\n\n  var ebnf = false; // transform ebnf to bnf if necessary\n\n  function extend(json, grammar) {\n    json.bnf = ebnf ? transform(grammar) : grammar;\n    return json;\n  }\n  /* generated by jison-lex 0.2.1 */\n\n\n  var lexer = function () {\n    var lexer = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function (input) {\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1); //this.yyleng -= len;\n\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function () {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function () {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n\n        return this;\n      },\n      // retain first n characters of the match\n      less: function (n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function () {\n        var next = this.match;\n\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n\n        return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function (match, indexed_rule) {\n        var token, lines, backup;\n\n        if (this.options.backtrack_lexer) {\n          // save context\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\n        if (this.done && this._input) {\n          this.done = false;\n        }\n\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          // recover context\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n\n          return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n\n        return false;\n      },\n      // return next match in input\n      next: function () {\n        if (this.done) {\n          return this.EOF;\n        }\n\n        if (!this._input) {\n          this.done = true;\n        }\n\n        var token, match, tempMatch, index;\n\n        if (!this._more) {\n          this.yytext = '';\n          this.match = '';\n        }\n\n        var rules = this._currentRules();\n\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue; // rule action called reject() implying a rule MISmatch.\n              } else {\n                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n\n        if (match) {\n          token = this.test_match(match, rules[index]);\n\n          if (token !== false) {\n            return token;\n          } // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\n\n          return false;\n        }\n\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: {},\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        var YYSTATE = YY_START;\n\n        switch ($avoiding_name_collisions) {\n          case 0:\n            this.pushState('code');\n            return 5;\n            break;\n\n          case 1:\n            return 43;\n            break;\n\n          case 2:\n            return 44;\n            break;\n\n          case 3:\n            return 45;\n            break;\n\n          case 4:\n            return 46;\n            break;\n\n          case 5:\n            return 47;\n            break;\n\n          case 6:\n            /* skip whitespace */\n            break;\n\n          case 7:\n            /* skip comment */\n            break;\n\n          case 8:\n            /* skip comment */\n            break;\n\n          case 9:\n            yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);\n            return 40;\n            break;\n\n          case 10:\n            return 41;\n            break;\n\n          case 11:\n            yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);\n            return 42;\n            break;\n\n          case 12:\n            yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);\n            return 42;\n            break;\n\n          case 13:\n            return 28;\n            break;\n\n          case 14:\n            return 30;\n            break;\n\n          case 15:\n            return 31;\n            break;\n\n          case 16:\n            this.pushState(ebnf ? 'ebnf' : 'bnf');\n            return 5;\n            break;\n\n          case 17:\n            if (!yy.options) yy.options = {};\n            ebnf = yy.options.ebnf = true;\n            break;\n\n          case 18:\n            return 48;\n            break;\n\n          case 19:\n            return 11;\n            break;\n\n          case 20:\n            return 22;\n            break;\n\n          case 21:\n            return 23;\n            break;\n\n          case 22:\n            return 24;\n            break;\n\n          case 23:\n            return 20;\n            break;\n\n          case 24:\n            return 18;\n            break;\n\n          case 25:\n            return 13;\n            break;\n\n          case 26:\n            /* ignore unrecognized decl */\n            break;\n\n          case 27:\n            /* ignore type */\n            break;\n\n          case 28:\n            yy_.yytext = yy_.yytext.substr(2, yy_.yyleng - 4);\n            return 15;\n            break;\n\n          case 29:\n            yy_.yytext = yy_.yytext.substr(2, yy_.yytext.length - 4);\n            return 15;\n            break;\n\n          case 30:\n            yy.depth = 0;\n            this.pushState('action');\n            return 49;\n            break;\n\n          case 31:\n            yy_.yytext = yy_.yytext.substr(2, yy_.yyleng - 2);\n            return 52;\n            break;\n\n          case 32:\n            /* ignore bad characters */\n            break;\n\n          case 33:\n            return 8;\n            break;\n\n          case 34:\n            return 54;\n            break;\n\n          case 35:\n            return 54;\n            break;\n\n          case 36:\n            return 54; // regexp with braces or quotes (and no spaces)\n\n            break;\n\n          case 37:\n            return 54;\n            break;\n\n          case 38:\n            return 54;\n            break;\n\n          case 39:\n            return 54;\n            break;\n\n          case 40:\n            return 54;\n            break;\n\n          case 41:\n            yy.depth++;\n            return 49;\n            break;\n\n          case 42:\n            if (yy.depth == 0) this.begin(ebnf ? 'ebnf' : 'bnf');else yy.depth--;\n            return 51;\n            break;\n\n          case 43:\n            return 9;\n            break;\n        }\n      },\n      rules: [/^(?:%%)/, /^(?:\\()/, /^(?:\\))/, /^(?:\\*)/, /^(?:\\?)/, /^(?:\\+)/, /^(?:\\s+)/, /^(?:\\/\\/.*)/, /^(?:\\/\\*(.|\\n|\\r)*?\\*\\/)/, /^(?:\\[([a-zA-Z][a-zA-Z0-9_-]*)\\])/, /^(?:([a-zA-Z][a-zA-Z0-9_-]*))/, /^(?:\"[^\"]+\")/, /^(?:'[^']+')/, /^(?::)/, /^(?:;)/, /^(?:\\|)/, /^(?:%%)/, /^(?:%ebnf\\b)/, /^(?:%prec\\b)/, /^(?:%start\\b)/, /^(?:%left\\b)/, /^(?:%right\\b)/, /^(?:%nonassoc\\b)/, /^(?:%parse-param\\b)/, /^(?:%options\\b)/, /^(?:%lex[\\w\\W]*?\\/lex\\b)/, /^(?:%[a-zA-Z]+[^\\r\\n]*)/, /^(?:<[a-zA-Z]*>)/, /^(?:\\{\\{[\\w\\W]*?\\}\\})/, /^(?:%\\{(.|\\r|\\n)*?%\\})/, /^(?:\\{)/, /^(?:->.*)/, /^(?:.)/, /^(?:$)/, /^(?:\\/\\*(.|\\n|\\r)*?\\*\\/)/, /^(?:\\/\\/.*)/, /^(?:\\/[^ /]*?['\"{}'][^ ]*?\\/)/, /^(?:\"(\\\\\\\\|\\\\\"|[^\"])*\")/, /^(?:'(\\\\\\\\|\\\\'|[^'])*')/, /^(?:[/\"'][^{}/\"']+)/, /^(?:[^{}/\"']+)/, /^(?:\\{)/, /^(?:\\})/, /^(?:(.|\\n|\\r)+)/],\n      conditions: {\n        \"bnf\": {\n          \"rules\": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33],\n          \"inclusive\": true\n        },\n        \"ebnf\": {\n          \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33],\n          \"inclusive\": true\n        },\n        \"action\": {\n          \"rules\": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42],\n          \"inclusive\": false\n        },\n        \"code\": {\n          \"rules\": [33, 43],\n          \"inclusive\": false\n        },\n        \"INITIAL\": {\n          \"rules\": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33],\n          \"inclusive\": true\n        }\n      }\n    };\n    return lexer;\n  }();\n\n  parser.lexer = lexer;\n\n  function Parser() {\n    this.yy = {};\n  }\n\n  Parser.prototype = parser;\n  parser.Parser = Parser;\n  return new Parser();\n}();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  exports.parser = bnf;\n  exports.Parser = bnf.Parser;\n\n  exports.parse = function () {\n    return bnf.parse.apply(bnf, arguments);\n  };\n\n  exports.main = function commonjsMain(args) {\n    if (!args[1]) {\n      console.log('Usage: ' + args[0] + ' FILE');\n      process.exit(1);\n    }\n\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n\n    return exports.parser.parse(source);\n  };\n\n  if (typeof module !== 'undefined' && require.main === module) {\n    exports.main(process.argv.slice(1));\n  }\n}","map":{"version":3,"sources":["/home/elvis/Documents/GitHub/medbase/mern-auth/node_modules/ebnf-parser/parser.js"],"names":["bnf","parser","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","length","$","extend","addDeclaration","include","start","lex","operator","parseParam","options","push","apply","concat","join","ebnf","prec","table","defaultActions","parseError","str","hash","recoverable","Error","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","setInput","yylloc","yyloc","ranges","Object","getPrototypeOf","popStack","n","token","symbol","preErrorSymbol","state","action","a","r","yyval","p","len","newState","expected","errStr","showPosition","text","match","line","loc","Array","first_line","last_line","first_column","last_column","range","transform","require","json","grammar","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","lines","unput","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","k","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","YYSTATE","depth","Parser","prototype","exports","main","commonjsMain","console","log","process","exit","source","readFileSync","normalize","module","argv"],"mappings":"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","sourcesContent":["/* parser generated by jison 0.4.11 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar bnf = (function(){\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"spec\":3,\"declaration_list\":4,\"%%\":5,\"grammar\":6,\"optional_end_block\":7,\"EOF\":8,\"CODE\":9,\"declaration\":10,\"START\":11,\"id\":12,\"LEX_BLOCK\":13,\"operator\":14,\"ACTION\":15,\"parse_param\":16,\"options\":17,\"OPTIONS\":18,\"token_list\":19,\"PARSE_PARAM\":20,\"associativity\":21,\"LEFT\":22,\"RIGHT\":23,\"NONASSOC\":24,\"symbol\":25,\"production_list\":26,\"production\":27,\":\":28,\"handle_list\":29,\";\":30,\"|\":31,\"handle_action\":32,\"handle\":33,\"prec\":34,\"action\":35,\"expression_suffix\":36,\"handle_sublist\":37,\"expression\":38,\"suffix\":39,\"ALIAS\":40,\"ID\":41,\"STRING\":42,\"(\":43,\")\":44,\"*\":45,\"?\":46,\"+\":47,\"PREC\":48,\"{\":49,\"action_body\":50,\"}\":51,\"ARROW_ACTION\":52,\"action_comments_body\":53,\"ACTION_BODY\":54,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"%%\",8:\"EOF\",9:\"CODE\",11:\"START\",13:\"LEX_BLOCK\",15:\"ACTION\",18:\"OPTIONS\",20:\"PARSE_PARAM\",22:\"LEFT\",23:\"RIGHT\",24:\"NONASSOC\",28:\":\",30:\";\",31:\"|\",40:\"ALIAS\",41:\"ID\",42:\"STRING\",43:\"(\",44:\")\",45:\"*\",46:\"?\",47:\"+\",48:\"PREC\",49:\"{\",51:\"}\",52:\"ARROW_ACTION\",54:\"ACTION_BODY\"},\nproductions_: [0,[3,5],[3,6],[7,0],[7,1],[4,2],[4,0],[10,2],[10,1],[10,1],[10,1],[10,1],[10,1],[17,2],[16,2],[14,2],[21,1],[21,1],[21,1],[19,2],[19,1],[6,1],[26,2],[26,1],[27,4],[29,3],[29,1],[32,3],[33,2],[33,0],[37,3],[37,1],[36,3],[36,2],[38,1],[38,1],[38,3],[39,0],[39,1],[39,1],[39,1],[34,2],[34,0],[25,1],[25,1],[12,1],[35,3],[35,1],[35,1],[35,0],[50,0],[50,1],[50,5],[50,4],[53,1],[53,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n          this.$ = $$[$0-4];\n          return extend(this.$, $$[$0-2]);\n        \nbreak;\ncase 2:\n          this.$ = $$[$0-5];\n          yy.addDeclaration(this.$, { include: $$[$0-1] });\n          return extend(this.$, $$[$0-3]);\n        \nbreak;\ncase 5:this.$ = $$[$0-1]; yy.addDeclaration(this.$, $$[$0]);\nbreak;\ncase 6:this.$ = {};\nbreak;\ncase 7:this.$ = {start: $$[$0]};\nbreak;\ncase 8:this.$ = {lex: $$[$0]};\nbreak;\ncase 9:this.$ = {operator: $$[$0]};\nbreak;\ncase 10:this.$ = {include: $$[$0]};\nbreak;\ncase 11:this.$ = {parseParam: $$[$0]};\nbreak;\ncase 12:this.$ = {options: $$[$0]};\nbreak;\ncase 13:this.$ = $$[$0];\nbreak;\ncase 14:this.$ = $$[$0];\nbreak;\ncase 15:this.$ = [$$[$0-1]]; this.$.push.apply(this.$, $$[$0]);\nbreak;\ncase 16:this.$ = 'left';\nbreak;\ncase 17:this.$ = 'right';\nbreak;\ncase 18:this.$ = 'nonassoc';\nbreak;\ncase 19:this.$ = $$[$0-1]; this.$.push($$[$0]);\nbreak;\ncase 20:this.$ = [$$[$0]];\nbreak;\ncase 21:this.$ = $$[$0];\nbreak;\ncase 22:\n            this.$ = $$[$0-1];\n            if ($$[$0][0] in this.$) \n                this.$[$$[$0][0]] = this.$[$$[$0][0]].concat($$[$0][1]);\n            else\n                this.$[$$[$0][0]] = $$[$0][1];\n        \nbreak;\ncase 23:this.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 24:this.$ = [$$[$0-3], $$[$0-1]];\nbreak;\ncase 25:this.$ = $$[$0-2]; this.$.push($$[$0]);\nbreak;\ncase 26:this.$ = [$$[$0]];\nbreak;\ncase 27:\n            this.$ = [($$[$0-2].length ? $$[$0-2].join(' ') : '')];\n            if($$[$0]) this.$.push($$[$0]);\n            if($$[$0-1]) this.$.push($$[$0-1]);\n            if (this.$.length === 1) this.$ = this.$[0];\n        \nbreak;\ncase 28:this.$ = $$[$0-1]; this.$.push($$[$0])\nbreak;\ncase 29:this.$ = [];\nbreak;\ncase 30:this.$ = $$[$0-2]; this.$.push($$[$0].join(' '));\nbreak;\ncase 31:this.$ = [$$[$0].join(' ')];\nbreak;\ncase 32:this.$ = $$[$0-2] + $$[$0-1] + \"[\" + $$[$0] + \"]\"; \nbreak;\ncase 33:this.$ = $$[$0-1] + $$[$0]; \nbreak;\ncase 34:this.$ = $$[$0]; \nbreak;\ncase 35:this.$ = ebnf ? \"'\" + $$[$0] + \"'\" : $$[$0]; \nbreak;\ncase 36:this.$ = '(' + $$[$0-1].join(' | ') + ')'; \nbreak;\ncase 37:this.$ = ''\nbreak;\ncase 41:this.$ = {prec: $$[$0]};\nbreak;\ncase 42:this.$ = null;\nbreak;\ncase 43:this.$ = $$[$0];\nbreak;\ncase 44:this.$ = yytext;\nbreak;\ncase 45:this.$ = yytext;\nbreak;\ncase 46:this.$ = $$[$0-1];\nbreak;\ncase 47:this.$ = $$[$0];\nbreak;\ncase 48:this.$ = '$$ =' + $$[$0] + ';';\nbreak;\ncase 49:this.$ = '';\nbreak;\ncase 50:this.$ = '';\nbreak;\ncase 51:this.$ = $$[$0];\nbreak;\ncase 52:this.$ = $$[$0-4] + $$[$0-3] + $$[$0-2] + $$[$0-1] + $$[$0];\nbreak;\ncase 53:this.$ = $$[$0-3] + $$[$0-2] + $$[$0-1] + $$[$0];\nbreak;\ncase 54: this.$ = yytext; \nbreak;\ncase 55: this.$ = $$[$0-1]+$$[$0]; \nbreak;\n}\n},\ntable: [{3:1,4:2,5:[2,6],11:[2,6],13:[2,6],15:[2,6],18:[2,6],20:[2,6],22:[2,6],23:[2,6],24:[2,6]},{1:[3]},{5:[1,3],10:4,11:[1,5],13:[1,6],14:7,15:[1,8],16:9,17:10,18:[1,13],20:[1,12],21:11,22:[1,14],23:[1,15],24:[1,16]},{6:17,12:20,26:18,27:19,41:[1,21]},{5:[2,5],11:[2,5],13:[2,5],15:[2,5],18:[2,5],20:[2,5],22:[2,5],23:[2,5],24:[2,5]},{12:22,41:[1,21]},{5:[2,8],11:[2,8],13:[2,8],15:[2,8],18:[2,8],20:[2,8],22:[2,8],23:[2,8],24:[2,8]},{5:[2,9],11:[2,9],13:[2,9],15:[2,9],18:[2,9],20:[2,9],22:[2,9],23:[2,9],24:[2,9]},{5:[2,10],11:[2,10],13:[2,10],15:[2,10],18:[2,10],20:[2,10],22:[2,10],23:[2,10],24:[2,10]},{5:[2,11],11:[2,11],13:[2,11],15:[2,11],18:[2,11],20:[2,11],22:[2,11],23:[2,11],24:[2,11]},{5:[2,12],11:[2,12],13:[2,12],15:[2,12],18:[2,12],20:[2,12],22:[2,12],23:[2,12],24:[2,12]},{12:25,19:23,25:24,41:[1,21],42:[1,26]},{12:25,19:27,25:24,41:[1,21],42:[1,26]},{12:25,19:28,25:24,41:[1,21],42:[1,26]},{41:[2,16],42:[2,16]},{41:[2,17],42:[2,17]},{41:[2,18],42:[2,18]},{5:[1,30],7:29,8:[2,3]},{5:[2,21],8:[2,21],12:20,27:31,41:[1,21]},{5:[2,23],8:[2,23],41:[2,23]},{28:[1,32]},{5:[2,45],11:[2,45],13:[2,45],15:[2,45],18:[2,45],20:[2,45],22:[2,45],23:[2,45],24:[2,45],28:[2,45],30:[2,45],31:[2,45],41:[2,45],42:[2,45],49:[2,45],52:[2,45]},{5:[2,7],11:[2,7],13:[2,7],15:[2,7],18:[2,7],20:[2,7],22:[2,7],23:[2,7],24:[2,7]},{5:[2,15],11:[2,15],12:25,13:[2,15],15:[2,15],18:[2,15],20:[2,15],22:[2,15],23:[2,15],24:[2,15],25:33,41:[1,21],42:[1,26]},{5:[2,20],11:[2,20],13:[2,20],15:[2,20],18:[2,20],20:[2,20],22:[2,20],23:[2,20],24:[2,20],41:[2,20],42:[2,20]},{5:[2,43],11:[2,43],13:[2,43],15:[2,43],18:[2,43],20:[2,43],22:[2,43],23:[2,43],24:[2,43],30:[2,43],31:[2,43],41:[2,43],42:[2,43],49:[2,43],52:[2,43]},{5:[2,44],11:[2,44],13:[2,44],15:[2,44],18:[2,44],20:[2,44],22:[2,44],23:[2,44],24:[2,44],30:[2,44],31:[2,44],41:[2,44],42:[2,44],49:[2,44],52:[2,44]},{5:[2,14],11:[2,14],12:25,13:[2,14],15:[2,14],18:[2,14],20:[2,14],22:[2,14],23:[2,14],24:[2,14],25:33,41:[1,21],42:[1,26]},{5:[2,13],11:[2,13],12:25,13:[2,13],15:[2,13],18:[2,13],20:[2,13],22:[2,13],23:[2,13],24:[2,13],25:33,41:[1,21],42:[1,26]},{8:[1,34]},{8:[2,4],9:[1,35]},{5:[2,22],8:[2,22],41:[2,22]},{15:[2,29],29:36,30:[2,29],31:[2,29],32:37,33:38,41:[2,29],42:[2,29],43:[2,29],48:[2,29],49:[2,29],52:[2,29]},{5:[2,19],11:[2,19],13:[2,19],15:[2,19],18:[2,19],20:[2,19],22:[2,19],23:[2,19],24:[2,19],41:[2,19],42:[2,19]},{1:[2,1]},{8:[1,39]},{30:[1,40],31:[1,41]},{30:[2,26],31:[2,26]},{15:[2,42],30:[2,42],31:[2,42],34:42,36:43,38:45,41:[1,46],42:[1,47],43:[1,48],48:[1,44],49:[2,42],52:[2,42]},{1:[2,2]},{5:[2,24],8:[2,24],41:[2,24]},{15:[2,29],30:[2,29],31:[2,29],32:49,33:38,41:[2,29],42:[2,29],43:[2,29],48:[2,29],49:[2,29],52:[2,29]},{15:[1,52],30:[2,49],31:[2,49],35:50,49:[1,51],52:[1,53]},{15:[2,28],30:[2,28],31:[2,28],41:[2,28],42:[2,28],43:[2,28],44:[2,28],48:[2,28],49:[2,28],52:[2,28]},{12:25,25:54,41:[1,21],42:[1,26]},{15:[2,37],30:[2,37],31:[2,37],39:55,40:[2,37],41:[2,37],42:[2,37],43:[2,37],44:[2,37],45:[1,56],46:[1,57],47:[1,58],48:[2,37],49:[2,37],52:[2,37]},{15:[2,34],30:[2,34],31:[2,34],40:[2,34],41:[2,34],42:[2,34],43:[2,34],44:[2,34],45:[2,34],46:[2,34],47:[2,34],48:[2,34],49:[2,34],52:[2,34]},{15:[2,35],30:[2,35],31:[2,35],40:[2,35],41:[2,35],42:[2,35],43:[2,35],44:[2,35],45:[2,35],46:[2,35],47:[2,35],48:[2,35],49:[2,35],52:[2,35]},{31:[2,29],33:60,37:59,41:[2,29],42:[2,29],43:[2,29],44:[2,29]},{30:[2,25],31:[2,25]},{30:[2,27],31:[2,27]},{49:[2,50],50:61,51:[2,50],53:62,54:[1,63]},{30:[2,47],31:[2,47]},{30:[2,48],31:[2,48]},{15:[2,41],30:[2,41],31:[2,41],49:[2,41],52:[2,41]},{15:[2,33],30:[2,33],31:[2,33],40:[1,64],41:[2,33],42:[2,33],43:[2,33],44:[2,33],48:[2,33],49:[2,33],52:[2,33]},{15:[2,38],30:[2,38],31:[2,38],40:[2,38],41:[2,38],42:[2,38],43:[2,38],44:[2,38],48:[2,38],49:[2,38],52:[2,38]},{15:[2,39],30:[2,39],31:[2,39],40:[2,39],41:[2,39],42:[2,39],43:[2,39],44:[2,39],48:[2,39],49:[2,39],52:[2,39]},{15:[2,40],30:[2,40],31:[2,40],40:[2,40],41:[2,40],42:[2,40],43:[2,40],44:[2,40],48:[2,40],49:[2,40],52:[2,40]},{31:[1,66],44:[1,65]},{31:[2,31],36:43,38:45,41:[1,46],42:[1,47],43:[1,48],44:[2,31]},{49:[1,68],51:[1,67]},{49:[2,51],51:[2,51],54:[1,69]},{49:[2,54],51:[2,54],54:[2,54]},{15:[2,32],30:[2,32],31:[2,32],41:[2,32],42:[2,32],43:[2,32],44:[2,32],48:[2,32],49:[2,32],52:[2,32]},{15:[2,36],30:[2,36],31:[2,36],40:[2,36],41:[2,36],42:[2,36],43:[2,36],44:[2,36],45:[2,36],46:[2,36],47:[2,36],48:[2,36],49:[2,36],52:[2,36]},{31:[2,29],33:70,41:[2,29],42:[2,29],43:[2,29],44:[2,29]},{30:[2,46],31:[2,46]},{49:[2,50],50:71,51:[2,50],53:62,54:[1,63]},{49:[2,55],51:[2,55],54:[2,55]},{31:[2,30],36:43,38:45,41:[1,46],42:[1,47],43:[1,48],44:[2,30]},{49:[1,68],51:[1,72]},{49:[2,53],51:[2,53],53:73,54:[1,63]},{49:[2,52],51:[2,52],54:[1,69]}],\ndefaultActions: {34:[2,1],39:[2,2]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == 'undefined') {\n        this.lexer.yylloc = {};\n    }\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === 'function') {\n        this.parseError = this.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || EOF;\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (this.lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + this.lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: this.lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: this.lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                this.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\nvar transform = require('./ebnf-transform').transform;\nvar ebnf = false;\n\n\n// transform ebnf to bnf if necessary\nfunction extend (json, grammar) {\n    json.bnf = ebnf ? transform(grammar) : grammar;\n    return json;\n}\n\n/* generated by jison-lex 0.2.1 */\nvar lexer = (function(){\nvar lexer = {\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:this.pushState('code');return 5;\nbreak;\ncase 1:return 43;\nbreak;\ncase 2:return 44;\nbreak;\ncase 3:return 45;\nbreak;\ncase 4:return 46;\nbreak;\ncase 5:return 47;\nbreak;\ncase 6:/* skip whitespace */\nbreak;\ncase 7:/* skip comment */\nbreak;\ncase 8:/* skip comment */\nbreak;\ncase 9:yy_.yytext = yy_.yytext.substr(1, yy_.yyleng-2); return 40;\nbreak;\ncase 10:return 41;\nbreak;\ncase 11:yy_.yytext = yy_.yytext.substr(1, yy_.yyleng-2); return 42;\nbreak;\ncase 12:yy_.yytext = yy_.yytext.substr(1, yy_.yyleng-2); return 42;\nbreak;\ncase 13:return 28;\nbreak;\ncase 14:return 30;\nbreak;\ncase 15:return 31;\nbreak;\ncase 16:this.pushState(ebnf ? 'ebnf' : 'bnf'); return 5;\nbreak;\ncase 17:if (!yy.options) yy.options = {}; ebnf = yy.options.ebnf = true;\nbreak;\ncase 18:return 48;\nbreak;\ncase 19:return 11;\nbreak;\ncase 20:return 22;\nbreak;\ncase 21:return 23;\nbreak;\ncase 22:return 24;\nbreak;\ncase 23:return 20;\nbreak;\ncase 24:return 18;\nbreak;\ncase 25:return 13;\nbreak;\ncase 26:/* ignore unrecognized decl */\nbreak;\ncase 27:/* ignore type */\nbreak;\ncase 28:yy_.yytext = yy_.yytext.substr(2, yy_.yyleng-4); return 15;\nbreak;\ncase 29:yy_.yytext = yy_.yytext.substr(2, yy_.yytext.length-4); return 15;\nbreak;\ncase 30:yy.depth = 0; this.pushState('action'); return 49;\nbreak;\ncase 31:yy_.yytext = yy_.yytext.substr(2, yy_.yyleng-2); return 52;\nbreak;\ncase 32:/* ignore bad characters */\nbreak;\ncase 33:return 8;\nbreak;\ncase 34:return 54;\nbreak;\ncase 35:return 54;\nbreak;\ncase 36:return 54; // regexp with braces or quotes (and no spaces)\nbreak;\ncase 37:return 54;\nbreak;\ncase 38:return 54;\nbreak;\ncase 39:return 54;\nbreak;\ncase 40:return 54;\nbreak;\ncase 41:yy.depth++; return 49;\nbreak;\ncase 42:if (yy.depth==0) this.begin(ebnf ? 'ebnf' : 'bnf'); else yy.depth--; return 51;\nbreak;\ncase 43:return 9;\nbreak;\n}\n},\nrules: [/^(?:%%)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\*)/,/^(?:\\?)/,/^(?:\\+)/,/^(?:\\s+)/,/^(?:\\/\\/.*)/,/^(?:\\/\\*(.|\\n|\\r)*?\\*\\/)/,/^(?:\\[([a-zA-Z][a-zA-Z0-9_-]*)\\])/,/^(?:([a-zA-Z][a-zA-Z0-9_-]*))/,/^(?:\"[^\"]+\")/,/^(?:'[^']+')/,/^(?::)/,/^(?:;)/,/^(?:\\|)/,/^(?:%%)/,/^(?:%ebnf\\b)/,/^(?:%prec\\b)/,/^(?:%start\\b)/,/^(?:%left\\b)/,/^(?:%right\\b)/,/^(?:%nonassoc\\b)/,/^(?:%parse-param\\b)/,/^(?:%options\\b)/,/^(?:%lex[\\w\\W]*?\\/lex\\b)/,/^(?:%[a-zA-Z]+[^\\r\\n]*)/,/^(?:<[a-zA-Z]*>)/,/^(?:\\{\\{[\\w\\W]*?\\}\\})/,/^(?:%\\{(.|\\r|\\n)*?%\\})/,/^(?:\\{)/,/^(?:->.*)/,/^(?:.)/,/^(?:$)/,/^(?:\\/\\*(.|\\n|\\r)*?\\*\\/)/,/^(?:\\/\\/.*)/,/^(?:\\/[^ /]*?['\"{}'][^ ]*?\\/)/,/^(?:\"(\\\\\\\\|\\\\\"|[^\"])*\")/,/^(?:'(\\\\\\\\|\\\\'|[^'])*')/,/^(?:[/\"'][^{}/\"']+)/,/^(?:[^{}/\"']+)/,/^(?:\\{)/,/^(?:\\})/,/^(?:(.|\\n|\\r)+)/],\nconditions: {\"bnf\":{\"rules\":[0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],\"inclusive\":true},\"ebnf\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],\"inclusive\":true},\"action\":{\"rules\":[33,34,35,36,37,38,39,40,41,42],\"inclusive\":false},\"code\":{\"rules\":[33,43],\"inclusive\":false},\"INITIAL\":{\"rules\":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],\"inclusive\":true}}\n};\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = bnf;\nexports.Parser = bnf.Parser;\nexports.parse = function () { return bnf.parse.apply(bnf, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"function SessionManager(options, serializeUser) {\n  if (typeof options == 'function') {\n    serializeUser = options;\n    options = undefined;\n  }\n\n  options = options || {};\n  this._key = options.key || 'passport';\n  this._serializeUser = serializeUser;\n}\n\nSessionManager.prototype.logIn = function (req, user, cb) {\n  var self = this;\n\n  this._serializeUser(user, req, function (err, obj) {\n    if (err) {\n      return cb(err);\n    }\n\n    if (!req._passport.session) {\n      req._passport.session = {};\n    }\n\n    req._passport.session.user = obj;\n\n    if (!req.session) {\n      req.session = {};\n    }\n\n    req.session[self._key] = req._passport.session;\n    cb();\n  });\n};\n\nSessionManager.prototype.logOut = function (req, cb) {\n  if (req._passport && req._passport.session) {\n    delete req._passport.session.user;\n  }\n\n  cb && cb();\n};\n\nmodule.exports = SessionManager;","map":{"version":3,"sources":["/home/elvis/Documents/GitHub/medbase/mern-auth/node_modules/passport/lib/sessionmanager.js"],"names":["SessionManager","options","serializeUser","undefined","_key","key","_serializeUser","prototype","logIn","req","user","cb","self","err","obj","_passport","session","logOut","module","exports"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,aAAjC,EAAgD;AAC9C,MAAI,OAAOD,OAAP,IAAkB,UAAtB,EAAkC;AAChCC,IAAAA,aAAa,GAAGD,OAAhB;AACAA,IAAAA,OAAO,GAAGE,SAAV;AACD;;AACDF,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,OAAKG,IAAL,GAAYH,OAAO,CAACI,GAAR,IAAe,UAA3B;AACA,OAAKC,cAAL,GAAsBJ,aAAtB;AACD;;AAEDF,cAAc,CAACO,SAAf,CAAyBC,KAAzB,GAAiC,UAASC,GAAT,EAAcC,IAAd,EAAoBC,EAApB,EAAwB;AACvD,MAAIC,IAAI,GAAG,IAAX;;AACA,OAAKN,cAAL,CAAoBI,IAApB,EAA0BD,GAA1B,EAA+B,UAASI,GAAT,EAAcC,GAAd,EAAmB;AAChD,QAAID,GAAJ,EAAS;AACP,aAAOF,EAAE,CAACE,GAAD,CAAT;AACD;;AACD,QAAI,CAACJ,GAAG,CAACM,SAAJ,CAAcC,OAAnB,EAA4B;AAC1BP,MAAAA,GAAG,CAACM,SAAJ,CAAcC,OAAd,GAAwB,EAAxB;AACD;;AACDP,IAAAA,GAAG,CAACM,SAAJ,CAAcC,OAAd,CAAsBN,IAAtB,GAA6BI,GAA7B;;AACA,QAAI,CAACL,GAAG,CAACO,OAAT,EAAkB;AAChBP,MAAAA,GAAG,CAACO,OAAJ,GAAc,EAAd;AACD;;AACDP,IAAAA,GAAG,CAACO,OAAJ,CAAYJ,IAAI,CAACR,IAAjB,IAAyBK,GAAG,CAACM,SAAJ,CAAcC,OAAvC;AACAL,IAAAA,EAAE;AACH,GAbD;AAcD,CAhBD;;AAkBAX,cAAc,CAACO,SAAf,CAAyBU,MAAzB,GAAkC,UAASR,GAAT,EAAcE,EAAd,EAAkB;AAClD,MAAIF,GAAG,CAACM,SAAJ,IAAiBN,GAAG,CAACM,SAAJ,CAAcC,OAAnC,EAA4C;AAC1C,WAAOP,GAAG,CAACM,SAAJ,CAAcC,OAAd,CAAsBN,IAA7B;AACD;;AACDC,EAAAA,EAAE,IAAIA,EAAE,EAAR;AACD,CALD;;AAQAO,MAAM,CAACC,OAAP,GAAiBnB,cAAjB","sourcesContent":["function SessionManager(options, serializeUser) {\n  if (typeof options == 'function') {\n    serializeUser = options;\n    options = undefined;\n  }\n  options = options || {};\n  \n  this._key = options.key || 'passport';\n  this._serializeUser = serializeUser;\n}\n\nSessionManager.prototype.logIn = function(req, user, cb) {\n  var self = this;\n  this._serializeUser(user, req, function(err, obj) {\n    if (err) {\n      return cb(err);\n    }\n    if (!req._passport.session) {\n      req._passport.session = {};\n    }\n    req._passport.session.user = obj;\n    if (!req.session) {\n      req.session = {};\n    }\n    req.session[self._key] = req._passport.session;\n    cb();\n  });\n}\n\nSessionManager.prototype.logOut = function(req, cb) {\n  if (req._passport && req._passport.session) {\n    delete req._passport.session.user;\n  }\n  cb && cb();\n}\n\n\nmodule.exports = SessionManager;\n"]},"metadata":{},"sourceType":"script"}